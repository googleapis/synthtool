#!/usr/bin/env python
# # Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
steps:
  # Show the gcloud info and check if gcloud exists
  - name: 'gcr.io/cloud-devrel-public-resources/python-samples-testing-docker:latest'
    entrypoint: /bin/sh
    args:
    - -c
    - 'gcloud config list'
  # Check the Python version
  - name: 'gcr.io/cloud-devrel-public-resources/python-samples-testing-docker:latest'
    entrypoint: /bin/sh
    args:
    - -c
    - 'python3 .cloud-build/CheckPythonVersion.py'
  # Fetch base branch if required
  - name: 'gcr.io/cloud-devrel-public-resources/python-samples-testing-docker:latest'
    entrypoint: /bin/sh
    args:
    - -c
    - 'if [ -n "${_BASE_BRANCH}" ]; then git fetch origin "${_BASE_BRANCH}":refs/remotes/origin/"${_BASE_BRANCH}"; else echo "Skipping fetch."; fi'
  # Install Python dependencies
  - name: 'gcr.io/cloud-devrel-public-resources/python-samples-testing-docker:latest'
    entrypoint: pip
    args: ['install', '--upgrade',  '--user', '--requirement', '.cloud-build/requirements.txt']
  # Install Python dependencies and run testing script
  - name: 'gcr.io/cloud-devrel-public-resources/python-samples-testing-docker:latest'
    entrypoint: /bin/sh
    args:
    - '-c'
    - |
      python3 -m pip freeze && python3 .cloud-build/ExecuteChangedNotebooks.py \
      --test_paths_file "${_TEST_PATHS_FILE}" --base_branch "${_FORCED_BASE_BRANCH}" --output_folder ${BUILD_ID} --variable_project_id ${PROJECT_ID} --variable_region ${_GCP_REGION}
    env:
    - 'IS_TESTING=1'
  # Fail if there is anything in the failure folder
  - name: 'gcr.io/cloud-devrel-public-resources/python-samples-testing-docker:latest'
    entrypoint: /bin/sh
    args: 
    - -c
    - 'echo "Download executed notebooks with this command: \"mkdir -p artifacts && gsutil rsync -r gs://${_GCS_ARTIFACTS_BUCKET}/test-artifacts/PR_${_PR_NUMBER}/BUILD_${BUILD_ID} artifacts/\"" && if [ "$(ls -A /workspace/${BUILD_ID}/failure | wc -l)" -ne 0 ]; then exit 1; else exit 0; fi' 
    timeout: 86400s
  # Copy artifacts to Google Storage
  artifacts:
    objects:
      location: gs://${_GCS_ARTIFACTS_BUCKET}/test-artifacts/PR_${_PR_NUMBER}/BUILD_${BUILD_ID}/
      paths: 
        - /workspace/${BUILD_ID}